{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","className","this","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,kCAWE,WAA8B,IAAD,OAC3BJ,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAbxC,oBAiBE,WACE,OACE,qBAAKE,UAAU,MAAf,SAC6B,KAA1BC,KAAKT,MAAMC,WAER,mBAAGO,UAAU,eAAb,qCAIA,oBAAGA,UAAU,eAAb,sCAEGC,KAAKT,MAAMC,WAFd,aA1BZ,GAAyBS,IAAMC,e,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.85d8ecba.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.PureComponent {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.pressedKey === ''\n          ? (\n            <p className=\"App__message\">\n              Nothing was pressed yet\n            </p>\n          ) : (\n            <p className=\"App__message\">\n              The last pressed key is [\n              {this.state.pressedKey}\n              ]\n            </p>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}